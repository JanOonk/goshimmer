version: "3"

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    network_mode: "host"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb_data:/data/db
    command: >
      --port=27117

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    network_mode: "host"
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    - --web.listen-address=:9090
    volumes:
    - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    network_mode: "host"
    environment:
      - GF_SERVER_HTTP_PORT=3000
    user: "104"
    volumes:
    - grafana_data:/var/lib/grafana

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.2
    restart: unless-stopped
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - type: bind
        source: ./elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch_data
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    environment:
      ES_JAVA_OPTS: "-Xmx2g -Xms2g"
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:7.13.2
    restart: unless-stopped
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - type: bind
        source: ./logstash/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5213:5213/udp"
    environment:
      LS_JAVA_OPTS: "-Xmx1g -Xms1g"
    depends_on:
      - elasticsearch
    networks:
      - elk

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.13.2
    restart: unless-stopped
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - type: bind
        source: ./kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elk

networks:
  elk:
    driver: bridge

volumes:
  mongodb_data:
  grafana_data:
  elasticsearch_data: